{"ast":null,"code":"var _jsxFileName = \"/Users/willzembricki/Flatiron/code/Phase3/phase-3-ruby-group-project-rack-react/surofrontend/src/components/PersonCard.js\";\nimport ClockComponent from \"./Clock\";\nimport AddRoundForm from \"./AddRoundForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PersonCard({\n  person,\n  people,\n  onForceReload\n}) {\n  if (!person) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ClockComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: person.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [person.name, \"'s total is: \", person.total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [person.name, \"'s balance is: \", person.balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddRoundForm, {\n      onForceReload: onForceReload,\n      people: peopleArr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PersonCard;\nexport default PersonCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonCard\");","map":{"version":3,"sources":["/Users/willzembricki/Flatiron/code/Phase3/phase-3-ruby-group-project-rack-react/surofrontend/src/components/PersonCard.js"],"names":["ClockComponent","AddRoundForm","PersonCard","person","people","onForceReload","name","total","balance","peopleArr"],"mappings":";AAAA,OAAOA,cAAP,MAA2B,SAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AACA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA;AAAlB,CAApB,EAAuD;AACrD,MAAI,CAACF,MAAL,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKA,MAAM,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,iBACGH,MAAM,CAACG,IADV,mBAC6BH,MAAM,CAACI,KADpC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAME;AAAA,iBACGJ,MAAM,CAACG,IADV,qBAC+BH,MAAM,CAACK,OADtC;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eASE,QAAC,YAAD;AAAc,MAAA,aAAa,EAAEH,aAA7B;AAA4C,MAAA,MAAM,EAAEI;AAApD;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;KAlBQP,U;AAoBT,eAAeA,UAAf","sourcesContent":["import ClockComponent from \"./Clock\";\nimport AddRoundForm from \"./AddRoundForm\";\nfunction PersonCard({ person, people, onForceReload }) {\n  if (!person) {\n    return <h2>loading...</h2>;\n  }\n\n  return (\n    <div>\n      <ClockComponent />\n      <h1>{person.name}</h1>\n      <h2>\n        {person.name}'s total is: {person.total}\n      </h2>\n      <h2>\n        {person.name}'s balance is: {person.balance}\n      </h2>\n      <AddRoundForm onForceReload={onForceReload} people={peopleArr} />\n    </div>\n  );\n}\n\nexport default PersonCard;\n"]},"metadata":{},"sourceType":"module"}