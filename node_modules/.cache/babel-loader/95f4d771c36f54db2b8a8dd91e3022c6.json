{"ast":null,"code":"var _jsxFileName = \"/Users/willzembricki/Flatiron/code/Phase3/phase-3-ruby-group-project-rack-react/surofrontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport AddPersonForm from \"./components/AddPersonForm\";\nimport NavBar from \"./components/NavBar\";\nimport PersonList from \"./components/PersonList\";\nimport PersonCard from \"./components/PersonCard\"; // import { Switch, Route } from \"react-router-dom\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport { useDarkMode } from \"./components/useDarkMode\";\nimport { GlobalStyles } from \"./components/Globalstyles\";\nimport { lightTheme, darkTheme } from \"./components/DarkModeTheme\";\nimport { useState, useEffect } from \"react\";\nimport Toggle from \"./components/ToggleDarkMode\"; // import { render } from \"react-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [reload, setReload] = useState(true);\n  const [peopleArr, setPeopleArr] = useState([]);\n  const [currentP, setCurrentP] = useState(null);\n  const [roundsArr, setRoundsArr] = useState([]);\n  const [personRoundsArr, setPersonRoundsArr] = useState([]);\n  const [theme, themeToggler, mountedComponent] = useDarkMode();\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n  useEffect(() => {\n    fetch(\"http://localhost:9393/people\").then(res => res.json()).then(people => setPeopleArr(people));\n    fetch(\"http://localhost:9393/rounds\").then(res => res.json()).then(rounds => setRoundsArr(rounds));\n    fetch(\"http://localhost:9393/person_rounds\").then(res => res.json()).then(personRounds => setPersonRoundsArr(personRounds));\n  }, [reload]); // function handleClickPerson() {\n  //   console.log(\"hello\");\n  //   setReload(!reload);\n  // }\n\n  function handleRoundEdit(roundAndPRArr) {\n    setRoundsArr(roundAndPRArr[0]);\n    setPersonRoundsArr(roundAndPRArr[1]);\n    setPeopleArr(roundAndPRArr[2]);\n    setCurrentP(roundAndPRArr[2].find(person => person.id === currentP.id));\n  }\n\n  function forceReload(data) {\n    setRoundsArr([...roundsArr, data[0].newRound]);\n    setPeopleArr(peopleArr.map(pep => {\n      if (pep.id === data[1].person.id) {\n        return data[1].person;\n      } else {\n        return pep;\n      }\n    }));\n    setCurrentP(data[1].person);\n    setPersonRoundsArr([...personRoundsArr, ...data[2]]);\n  }\n\n  function handleCurrentP(id) {\n    const thisP = peopleArr.find(person => person.id === parseInt(id));\n    setCurrentP(thisP);\n  }\n\n  function handleDeleteRound(e) {\n    fetch(`http://localhost:9393/rounds/${e.target.value}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      // let newCurrentP = currentP\n      // newCurrentP.total = newCurrentP.total - roundsArr.find(round => round.id === e.target.value).price\n      // newCurrentP.balance =\n      setRoundsArr(roundsArr.filter(round => round.id !== parseInt(e.target.value)));\n      setPersonRoundsArr(personRoundsArr.filter(personRound => personRound.round_id !== parseInt(e.target.value)));\n      setReload(!reload);\n    });\n  }\n\n  function handleAddPerson(data) {\n    setPeopleArr([...peopleArr, data]);\n  }\n\n  if (!mountedComponent) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: themeMode,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Toggle, {\n          theme: theme,\n          toggleTheme: themeToggler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(PersonList, {\n            onCurrentP: handleCurrentP,\n            people: peopleArr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddPersonForm, {\n            onAddPerson: handleAddPerson\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PersonCard, {\n          onForceReload: forceReload,\n          person: currentP,\n          people: peopleArr,\n          roundsArr: roundsArr,\n          onDeleteRound: handleDeleteRound,\n          personRounds: personRoundsArr,\n          onRoundEdit: handleRoundEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uNit58UWKKfiI0aaP49y9YsU2F0=\", false, function () {\n  return [useDarkMode];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/willzembricki/Flatiron/code/Phase3/phase-3-ruby-group-project-rack-react/surofrontend/src/App.js"],"names":["AddPersonForm","NavBar","PersonList","PersonCard","ThemeProvider","useDarkMode","GlobalStyles","lightTheme","darkTheme","useState","useEffect","Toggle","App","reload","setReload","peopleArr","setPeopleArr","currentP","setCurrentP","roundsArr","setRoundsArr","personRoundsArr","setPersonRoundsArr","theme","themeToggler","mountedComponent","themeMode","fetch","then","res","json","people","rounds","personRounds","handleRoundEdit","roundAndPRArr","find","person","id","forceReload","data","newRound","map","pep","handleCurrentP","thisP","parseInt","handleDeleteRound","e","target","value","method","filter","round","personRound","round_id","handleAddPerson"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport AddPersonForm from \"./components/AddPersonForm\";\nimport NavBar from \"./components/NavBar\";\nimport PersonList from \"./components/PersonList\";\nimport PersonCard from \"./components/PersonCard\";\n// import { Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { useDarkMode } from \"./components/useDarkMode\";\nimport { GlobalStyles } from \"./components/Globalstyles\";\nimport { lightTheme, darkTheme } from \"./components/DarkModeTheme\";\nimport { useState, useEffect } from \"react\";\nimport Toggle from \"./components/ToggleDarkMode\";\n// import { render } from \"react-dom\";\n\nfunction App() {\n  const [reload, setReload] = useState(true);\n  const [peopleArr, setPeopleArr] = useState([]);\n  const [currentP, setCurrentP] = useState(null);\n  const [roundsArr, setRoundsArr] = useState([]);\n  const [personRoundsArr, setPersonRoundsArr] = useState([]);\n  const [theme, themeToggler, mountedComponent] = useDarkMode();\n\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n\n  useEffect(() => {\n    fetch(\"http://localhost:9393/people\")\n      .then((res) => res.json())\n      .then((people) => setPeopleArr(people));\n    fetch(\"http://localhost:9393/rounds\")\n      .then((res) => res.json())\n      .then((rounds) => setRoundsArr(rounds));\n    fetch(\"http://localhost:9393/person_rounds\")\n      .then((res) => res.json())\n      .then((personRounds) => setPersonRoundsArr(personRounds));\n  }, [reload]);\n\n  // function handleClickPerson() {\n  //   console.log(\"hello\");\n  //   setReload(!reload);\n  // }\n  function handleRoundEdit(roundAndPRArr) {\n    setRoundsArr(roundAndPRArr[0]);\n    setPersonRoundsArr(roundAndPRArr[1]);\n    setPeopleArr(roundAndPRArr[2]);\n    setCurrentP(roundAndPRArr[2].find((person) => person.id === currentP.id));\n  }\n\n  function forceReload(data) {\n    setRoundsArr([...roundsArr, data[0].newRound]);\n    setPeopleArr(\n      peopleArr.map((pep) => {\n        if (pep.id === data[1].person.id) {\n          return data[1].person;\n        } else {\n          return pep;\n        }\n      })\n    );\n    setCurrentP(data[1].person);\n    setPersonRoundsArr([...personRoundsArr, ...data[2]]);\n  }\n  function handleCurrentP(id) {\n    const thisP = peopleArr.find((person) => person.id === parseInt(id));\n    setCurrentP(thisP);\n  }\n\n  function handleDeleteRound(e) {\n    fetch(`http://localhost:9393/rounds/${e.target.value}`, {\n      method: \"DELETE\",\n    }).then(() => {\n      // let newCurrentP = currentP\n      // newCurrentP.total = newCurrentP.total - roundsArr.find(round => round.id === e.target.value).price\n      // newCurrentP.balance =\n      setRoundsArr(\n        roundsArr.filter((round) => round.id !== parseInt(e.target.value))\n      );\n      setPersonRoundsArr(\n        personRoundsArr.filter(\n          (personRound) => personRound.round_id !== parseInt(e.target.value)\n        )\n      );\n\n      setReload(!reload);\n    });\n  }\n\n  function handleAddPerson(data) {\n    setPeopleArr([...peopleArr, data]);\n  }\n\n  if (!mountedComponent) return <div />;\n  return (\n    <ThemeProvider theme={themeMode}>\n      <>\n        <GlobalStyles />\n        <div className=\"App\">\n          <Toggle theme={theme} toggleTheme={themeToggler} />\n          <NavBar />\n          <div>\n            <PersonList onCurrentP={handleCurrentP} people={peopleArr} />\n            <AddPersonForm onAddPerson={handleAddPerson} />\n          </div>\n          <PersonCard\n            onForceReload={forceReload}\n            person={currentP}\n            people={peopleArr}\n            roundsArr={roundsArr}\n            onDeleteRound={handleDeleteRound}\n            personRounds={personRoundsArr}\n            onRoundEdit={handleRoundEdit}\n          />\n        </div>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}